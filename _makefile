####################################
#            Constants             #
####################################

OUTPUT_NAME = dnsserver
OUTPUT_DIR = .

ifeq ($(OPERATING_SYSTEM), windows )
	OUTPUT_EXT = .exe
else
	OUTPUT_EXT = 
endif

# Config
OBJECT_DIR = bin
SOURCE_DIR = src
LIBS = -lws2_32 -lwsock32
CFLAGS = -std=c++11 -Wall -I$(SOURCE_DIR) -D$(OPERATING_SYSTEM)
COMP = g++
OUTPUT_FULL = $(OUTPUT_DIR)/$(OUTPUT_NAME)$(OUTPUT_EXT)
DEBUG = -Ddebug


# Files
OBJS = \
	$(OBJECT_DIR)/main.o \
	$(OBJECT_DIR)/DNSCache.o \
	$(OBJECT_DIR)/Configuration.o \
	$(OBJECT_DIR)/Datagram.o \
	$(OBJECT_DIR)/DatagramSocket.o \
	$(OBJECT_DIR)/EntryFilter.o \
	$(OBJECT_DIR)/ExString.o \
	$(OBJECT_DIR)/INetAddress.o \
	$(OBJECT_DIR)/Printer.o
	
	

####################################
#             Commands             #
####################################

# Default command
default: build

# Build command
build: clean init build_all
	@$(COMP) $(CFLAGS) $(OBJS) -o $(OUTPUT_FULL) $(LIBS)
	@rm -f -r $(OBJECT_DIR)
	@echo "Build finished with success."
	@echo "You can find the resulting file at : "$(OUTPUT_FULL)

# Debug mode
debug: CFLAGS += -DDEBUG
debug: build

# Release mode
release: build
	
# Clean/Clear command
clean:
	@rm -f $(OUTPUT_FULL)
	@rm -f -r $(OBJECT_DIR)
	@echo "Cleaned, ready for a new build."
clear: clean
	
# Help
help:
	@echo "Commands : make [CMD]"
	@echo "With [CMD] option :"
	@echo "   * build [DEFAULT]"
	@echo "   * clean/clear"

	
####################################
#           Compilations           #
####################################

$(OBJECT_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	@$(COMP) $(CFLAGS) -c $< -o $@ $(LIBS)

init:
	@mkdir -p $(OBJECT_DIR)
	@mkdir -p $(OUTPUT_DIR)
	
build_all: $(OBJS)

